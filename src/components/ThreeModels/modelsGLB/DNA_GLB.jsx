/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: T-FLEX CAD ST (Free) (https://sketchfab.com/tflexcad)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/human-dna-746f0754e7cb45a4b54840e1b858b01d
Title: Human DNA
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import humandnaGLB from '../models/human_dna.glb';

const DNA_GLB = (props) => {

  const { nodes, materials } = useGLTF(humandnaGLB)
  
  return (
    <group {...props} dispose={null}>
      <group
        position={[0, -0.605, 0.605]}
        rotation={[-Math.PI, 0, 0]}
        userData={{ name: 'DNA.obj.cleaner.materialmerger.gles' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.App7B3}
          userData={{ name: 'Object_2' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials.App3F1}
          userData={{ name: 'Object_3' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials.App3F1}
          userData={{ name: 'Object_4' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials.App3F1}
          userData={{ name: 'Object_5' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.App9B3}
          userData={{ name: 'Object_6' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.App9B3}
          userData={{ name: 'Object_7' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials.App9B3}
          userData={{ name: 'Object_8' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials.App9B3}
          userData={{ name: 'Object_9' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_10.geometry}
          material={materials.App9B3}
          userData={{ name: 'Object_10' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_11.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_11' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_12.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_12' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_13.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_13' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_14.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_14' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_15.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_15' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_16.geometry}
          material={materials.AppC01}
          userData={{ name: 'Object_16' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_17.geometry}
          material={materials.AppE71}
          userData={{ name: 'Object_17' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_18.geometry}
          material={materials.AppE71}
          userData={{ name: 'Object_18' }}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_19.geometry}
          material={materials.AppE71}
          userData={{ name: 'Object_19' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload(humandnaGLB)

export default DNA_GLB
